{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { TreeViewList } from './TreeViewList';\nimport { TreeViewListItem } from './TreeViewListItem';\nexport const TreeView = _a => {\n  var {\n    data,\n    isNested = false,\n    hasChecks = false,\n    hasBadges = false,\n    defaultAllExpanded = false,\n    icon,\n    expandedIcon,\n    parentItem,\n    onSelect,\n    onCheck,\n    onSearch,\n    searchProps,\n    activeItems,\n    compareItems = (item, itemToCheck) => item.id === itemToCheck.id\n  } = _a,\n      props = __rest(_a, [\"data\", \"isNested\", \"hasChecks\", \"hasBadges\", \"defaultAllExpanded\", \"icon\", \"expandedIcon\", \"parentItem\", \"onSelect\", \"onCheck\", \"onSearch\", \"searchProps\", \"activeItems\", \"compareItems\"]);\n\n  return React.createElement(TreeViewList, Object.assign({\n    isNested: isNested,\n    onSearch: onSearch,\n    searchProps: searchProps\n  }, props), data.map(item => React.createElement(TreeViewListItem, Object.assign({\n    key: item.name.toString(),\n    name: item.name,\n    id: item.id,\n    defaultExpanded: item.defaultExpanded !== undefined ? item.defaultExpanded : defaultAllExpanded,\n    onSelect: onSelect,\n    onCheck: onCheck,\n    hasCheck: item.hasCheck !== undefined ? item.hasCheck : hasChecks,\n    checkProps: item.checkProps,\n    hasBadge: item.hasBadge !== undefined ? item.hasBadge : hasBadges,\n    badgeProps: item.checkProps,\n    activeItems: activeItems,\n    parentItem: parentItem,\n    itemData: item,\n    icon: item.icon !== undefined ? item.icon : icon,\n    expandedIcon: item.expandedIcon !== undefined ? item.expandedIcon : expandedIcon,\n    action: item.action,\n    compareItems: compareItems\n  }, item.children && {\n    children: React.createElement(TreeView, {\n      data: item.children,\n      isNested: true,\n      parentItem: item,\n      hasChecks: hasChecks,\n      hasBadges: hasBadges,\n      defaultAllExpanded: defaultAllExpanded,\n      onSelect: onSelect,\n      onCheck: onCheck,\n      activeItems: activeItems,\n      icon: icon,\n      expandedIcon: expandedIcon\n    })\n  }))));\n};\nTreeView.displayName = 'TreeView';","map":{"version":3,"sources":["../../../../src/components/TreeView/TreeView.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { TreeViewList } from './TreeViewList';\nimport { TreeViewListItem } from './TreeViewListItem';\nexport const TreeView = (_a) => {\n    var { data, isNested = false, hasChecks = false, hasBadges = false, defaultAllExpanded = false, icon, expandedIcon, parentItem, onSelect, onCheck, onSearch, searchProps, activeItems, compareItems = (item, itemToCheck) => item.id === itemToCheck.id } = _a, props = __rest(_a, [\"data\", \"isNested\", \"hasChecks\", \"hasBadges\", \"defaultAllExpanded\", \"icon\", \"expandedIcon\", \"parentItem\", \"onSelect\", \"onCheck\", \"onSearch\", \"searchProps\", \"activeItems\", \"compareItems\"]);\n    return (React.createElement(TreeViewList, Object.assign({ isNested: isNested, onSearch: onSearch, searchProps: searchProps }, props), data.map(item => (React.createElement(TreeViewListItem, Object.assign({ key: item.name.toString(), name: item.name, id: item.id, defaultExpanded: item.defaultExpanded !== undefined ? item.defaultExpanded : defaultAllExpanded, onSelect: onSelect, onCheck: onCheck, hasCheck: item.hasCheck !== undefined ? item.hasCheck : hasChecks, checkProps: item.checkProps, hasBadge: item.hasBadge !== undefined ? item.hasBadge : hasBadges, badgeProps: item.checkProps, activeItems: activeItems, parentItem: parentItem, itemData: item, icon: item.icon !== undefined ? item.icon : icon, expandedIcon: item.expandedIcon !== undefined ? item.expandedIcon : expandedIcon, action: item.action, compareItems: compareItems }, (item.children && {\n        children: (React.createElement(TreeView, { data: item.children, isNested: true, parentItem: item, hasChecks: hasChecks, hasBadges: hasBadges, defaultAllExpanded: defaultAllExpanded, onSelect: onSelect, onCheck: onCheck, activeItems: activeItems, icon: icon, expandedIcon: expandedIcon }))\n    })))))));\n};\nTreeView.displayName = 'TreeView';\n//# sourceMappingURL=TreeView.js.map"]},"metadata":{},"sourceType":"module"}