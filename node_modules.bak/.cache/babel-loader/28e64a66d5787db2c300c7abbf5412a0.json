{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { AlertIcon } from './AlertIcon';\nimport { capitalize, useOUIAProps } from '../../helpers';\nimport { AlertContext } from './AlertContext';\nimport maxLines from \"@patternfly/react-tokens/dist/esm/c_alert__title_max_lines\";\nimport { Tooltip } from '../Tooltip';\nexport var AlertVariant;\n\n(function (AlertVariant) {\n  AlertVariant[\"success\"] = \"success\";\n  AlertVariant[\"danger\"] = \"danger\";\n  AlertVariant[\"warning\"] = \"warning\";\n  AlertVariant[\"info\"] = \"info\";\n  AlertVariant[\"default\"] = \"default\";\n})(AlertVariant || (AlertVariant = {}));\n\nexport const Alert = _a => {\n  var {\n    variant = AlertVariant.default,\n    isInline = false,\n    isLiveRegion = false,\n    variantLabel = `${capitalize(variant)} alert:`,\n    'aria-label': ariaLabel = `${capitalize(variant)} Alert`,\n    actionClose,\n    actionLinks,\n    title,\n    children = '',\n    className = '',\n    ouiaId,\n    ouiaSafe = true,\n    timeout = false,\n    onTimeout,\n    truncateTitle = 0,\n    tooltipPosition\n  } = _a,\n      props = __rest(_a, [\"variant\", \"isInline\", \"isLiveRegion\", \"variantLabel\", 'aria-label', \"actionClose\", \"actionLinks\", \"title\", \"children\", \"className\", \"ouiaId\", \"ouiaSafe\", \"timeout\", \"onTimeout\", \"truncateTitle\", \"tooltipPosition\"]);\n\n  const ouiaProps = useOUIAProps(Alert.displayName, ouiaId, ouiaSafe, variant);\n  const getHeadingContent = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: css(accessibleStyles.screenReader)\n  }, variantLabel), title);\n  const [disableAlert, setDisableAlert] = useState(false);\n  const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n  const titleRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!titleRef.current || !truncateTitle) {\n      return;\n    }\n\n    titleRef.current.style.setProperty(maxLines.name, truncateTitle.toString());\n    const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;\n\n    if (isTooltipVisible !== showTooltip) {\n      setIsTooltipVisible(showTooltip);\n    }\n  }, [titleRef, truncateTitle, isTooltipVisible]);\n  const customClassName = css(styles.alert, isInline && styles.modifiers.inline, variant !== AlertVariant.default && styles.modifiers[variant], className);\n  const Title = React.createElement(\"h4\", Object.assign({}, isTooltipVisible && {\n    tabIndex: 0\n  }, {\n    ref: titleRef,\n    className: css(styles.alertTitle, truncateTitle && styles.modifiers.truncate)\n  }), getHeadingContent);\n\n  if (disableAlert === false && timeout && timeout !== 0) {\n    setTimeout(() => {\n      setDisableAlert(true);\n\n      if (onTimeout) {\n        onTimeout();\n      }\n    }, timeout === true ? 8000 : timeout);\n  }\n\n  if (disableAlert === false) {\n    return React.createElement(\"div\", Object.assign({}, props, {\n      className: customClassName,\n      \"aria-label\": ariaLabel\n    }, ouiaProps, isLiveRegion && {\n      'aria-live': 'polite',\n      'aria-atomic': 'false'\n    }), React.createElement(AlertIcon, {\n      variant: variant\n    }), isTooltipVisible ? React.createElement(Tooltip, {\n      content: getHeadingContent,\n      position: tooltipPosition\n    }, Title) : Title, actionClose && React.createElement(AlertContext.Provider, {\n      value: {\n        title,\n        variantLabel\n      }\n    }, React.createElement(\"div\", {\n      className: css(styles.alertAction)\n    }, actionClose)), children && React.createElement(\"div\", {\n      className: css(styles.alertDescription)\n    }, children), actionLinks && React.createElement(\"div\", {\n      className: css(styles.alertActionGroup)\n    }, actionLinks));\n  } else {\n    return null;\n  }\n};\nAlert.displayName = 'Alert';","map":{"version":3,"sources":["../../../../src/components/Alert/Alert.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { AlertIcon } from './AlertIcon';\nimport { capitalize, useOUIAProps } from '../../helpers';\nimport { AlertContext } from './AlertContext';\nimport maxLines from \"@patternfly/react-tokens/dist/esm/c_alert__title_max_lines\";\nimport { Tooltip } from '../Tooltip';\nexport var AlertVariant;\n(function (AlertVariant) {\n    AlertVariant[\"success\"] = \"success\";\n    AlertVariant[\"danger\"] = \"danger\";\n    AlertVariant[\"warning\"] = \"warning\";\n    AlertVariant[\"info\"] = \"info\";\n    AlertVariant[\"default\"] = \"default\";\n})(AlertVariant || (AlertVariant = {}));\nexport const Alert = (_a) => {\n    var { variant = AlertVariant.default, isInline = false, isLiveRegion = false, variantLabel = `${capitalize(variant)} alert:`, 'aria-label': ariaLabel = `${capitalize(variant)} Alert`, actionClose, actionLinks, title, children = '', className = '', ouiaId, ouiaSafe = true, timeout = false, onTimeout, truncateTitle = 0, tooltipPosition } = _a, props = __rest(_a, [\"variant\", \"isInline\", \"isLiveRegion\", \"variantLabel\", 'aria-label', \"actionClose\", \"actionLinks\", \"title\", \"children\", \"className\", \"ouiaId\", \"ouiaSafe\", \"timeout\", \"onTimeout\", \"truncateTitle\", \"tooltipPosition\"]);\n    const ouiaProps = useOUIAProps(Alert.displayName, ouiaId, ouiaSafe, variant);\n    const getHeadingContent = (React.createElement(React.Fragment, null,\n        React.createElement(\"span\", { className: css(accessibleStyles.screenReader) }, variantLabel),\n        title));\n    const [disableAlert, setDisableAlert] = useState(false);\n    const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n    const titleRef = React.useRef(null);\n    React.useEffect(() => {\n        if (!titleRef.current || !truncateTitle) {\n            return;\n        }\n        titleRef.current.style.setProperty(maxLines.name, truncateTitle.toString());\n        const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;\n        if (isTooltipVisible !== showTooltip) {\n            setIsTooltipVisible(showTooltip);\n        }\n    }, [titleRef, truncateTitle, isTooltipVisible]);\n    const customClassName = css(styles.alert, isInline && styles.modifiers.inline, variant !== AlertVariant.default && styles.modifiers[variant], className);\n    const Title = (React.createElement(\"h4\", Object.assign({}, (isTooltipVisible && { tabIndex: 0 }), { ref: titleRef, className: css(styles.alertTitle, truncateTitle && styles.modifiers.truncate) }), getHeadingContent));\n    if (disableAlert === false && timeout && timeout !== 0) {\n        setTimeout(() => {\n            setDisableAlert(true);\n            if (onTimeout) {\n                onTimeout();\n            }\n        }, timeout === true ? 8000 : timeout);\n    }\n    if (disableAlert === false) {\n        return (React.createElement(\"div\", Object.assign({}, props, { className: customClassName, \"aria-label\": ariaLabel }, ouiaProps, (isLiveRegion && {\n            'aria-live': 'polite',\n            'aria-atomic': 'false'\n        })),\n            React.createElement(AlertIcon, { variant: variant }),\n            isTooltipVisible ? (React.createElement(Tooltip, { content: getHeadingContent, position: tooltipPosition }, Title)) : (Title),\n            actionClose && (React.createElement(AlertContext.Provider, { value: { title, variantLabel } },\n                React.createElement(\"div\", { className: css(styles.alertAction) }, actionClose))),\n            children && React.createElement(\"div\", { className: css(styles.alertDescription) }, children),\n            actionLinks && React.createElement(\"div\", { className: css(styles.alertActionGroup) }, actionLinks)));\n    }\n    else {\n        return null;\n    }\n};\nAlert.displayName = 'Alert';\n//# sourceMappingURL=Alert.js.map"]},"metadata":{},"sourceType":"module"}