{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/SearchInput/search-input';\nimport { css } from '@patternfly/react-styles';\nimport { Button, ButtonVariant } from '../Button';\nimport { Badge } from '../Badge';\nimport AngleDownIcon from \"@patternfly/react-icons/dist/esm/icons/angle-down-icon\";\nimport AngleUpIcon from \"@patternfly/react-icons/dist/esm/icons/angle-up-icon\";\nimport TimesIcon from \"@patternfly/react-icons/dist/esm/icons/times-icon\";\nimport SearchIcon from \"@patternfly/react-icons/dist/esm/icons/search-icon\";\nexport const SearchInput = _a => {\n  var {\n    className,\n    value = '',\n    placeholder,\n    onChange,\n    onClear,\n    resultsCount,\n    onNextClick,\n    onPreviousClick,\n    'aria-label': ariaLabel = 'Search input'\n  } = _a,\n      props = __rest(_a, [\"className\", \"value\", \"placeholder\", \"onChange\", \"onClear\", \"resultsCount\", \"onNextClick\", \"onPreviousClick\", 'aria-label']);\n\n  const onChangeHandler = event => {\n    if (onChange) {\n      onChange(event.currentTarget.value, event);\n    }\n  };\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(className, styles.searchInput)\n  }, props), React.createElement(\"span\", {\n    className: css(styles.searchInputText)\n  }, React.createElement(\"span\", {\n    className: css(styles.searchInputIcon)\n  }, React.createElement(SearchIcon, null)), React.createElement(\"input\", {\n    className: css(styles.searchInputTextInput),\n    value: value,\n    placeholder: placeholder,\n    \"aria-label\": ariaLabel,\n    onChange: onChangeHandler\n  })), value && React.createElement(\"span\", {\n    className: css(styles.searchInputUtilities)\n  }, resultsCount && React.createElement(\"span\", {\n    className: css(styles.searchInputCount)\n  }, React.createElement(Badge, {\n    isRead: true\n  }, resultsCount)), !!onNextClick && !!onPreviousClick && React.createElement(\"span\", {\n    className: css(styles.searchInputNav)\n  }, React.createElement(Button, {\n    variant: ButtonVariant.plain,\n    \"aria-label\": \"Previous\",\n    onClick: onPreviousClick\n  }, React.createElement(AngleUpIcon, null)), React.createElement(Button, {\n    variant: ButtonVariant.plain,\n    \"aria-label\": \"Next\",\n    onClick: onNextClick\n  }, React.createElement(AngleDownIcon, null))), React.createElement(\"span\", {\n    className: \"pf-c-search-input__clear\"\n  }, React.createElement(Button, {\n    variant: ButtonVariant.plain,\n    \"aria-label\": \"Clear\",\n    onClick: onClear\n  }, React.createElement(TimesIcon, null)))));\n};\nSearchInput.displayName = 'SearchInput';","map":{"version":3,"sources":["../../../../src/components/SearchInput/SearchInput.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/SearchInput/search-input';\nimport { css } from '@patternfly/react-styles';\nimport { Button, ButtonVariant } from '../Button';\nimport { Badge } from '../Badge';\nimport AngleDownIcon from \"@patternfly/react-icons/dist/esm/icons/angle-down-icon\";\nimport AngleUpIcon from \"@patternfly/react-icons/dist/esm/icons/angle-up-icon\";\nimport TimesIcon from \"@patternfly/react-icons/dist/esm/icons/times-icon\";\nimport SearchIcon from \"@patternfly/react-icons/dist/esm/icons/search-icon\";\nexport const SearchInput = (_a) => {\n    var { className, value = '', placeholder, onChange, onClear, resultsCount, onNextClick, onPreviousClick, 'aria-label': ariaLabel = 'Search input' } = _a, props = __rest(_a, [\"className\", \"value\", \"placeholder\", \"onChange\", \"onClear\", \"resultsCount\", \"onNextClick\", \"onPreviousClick\", 'aria-label']);\n    const onChangeHandler = (event) => {\n        if (onChange) {\n            onChange(event.currentTarget.value, event);\n        }\n    };\n    return (React.createElement(\"div\", Object.assign({ className: css(className, styles.searchInput) }, props),\n        React.createElement(\"span\", { className: css(styles.searchInputText) },\n            React.createElement(\"span\", { className: css(styles.searchInputIcon) },\n                React.createElement(SearchIcon, null)),\n            React.createElement(\"input\", { className: css(styles.searchInputTextInput), value: value, placeholder: placeholder, \"aria-label\": ariaLabel, onChange: onChangeHandler })),\n        value && (React.createElement(\"span\", { className: css(styles.searchInputUtilities) },\n            resultsCount && (React.createElement(\"span\", { className: css(styles.searchInputCount) },\n                React.createElement(Badge, { isRead: true }, resultsCount))),\n            !!onNextClick && !!onPreviousClick && (React.createElement(\"span\", { className: css(styles.searchInputNav) },\n                React.createElement(Button, { variant: ButtonVariant.plain, \"aria-label\": \"Previous\", onClick: onPreviousClick },\n                    React.createElement(AngleUpIcon, null)),\n                React.createElement(Button, { variant: ButtonVariant.plain, \"aria-label\": \"Next\", onClick: onNextClick },\n                    React.createElement(AngleDownIcon, null)))),\n            React.createElement(\"span\", { className: \"pf-c-search-input__clear\" },\n                React.createElement(Button, { variant: ButtonVariant.plain, \"aria-label\": \"Clear\", onClick: onClear },\n                    React.createElement(TimesIcon, null)))))));\n};\nSearchInput.displayName = 'SearchInput';\n//# sourceMappingURL=SearchInput.js.map"]},"metadata":{},"sourceType":"module"}