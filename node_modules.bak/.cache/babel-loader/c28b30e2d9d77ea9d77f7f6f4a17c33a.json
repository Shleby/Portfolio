{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport a11yStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nimport { getUniqueId } from '../../helpers/util';\nimport { NavContext } from './Nav';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class NavExpandable extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.expandableRef = React.createRef();\n    this.id = this.props.id || getUniqueId();\n    this.state = {\n      expandedState: this.props.isExpanded,\n      ouiaStateId: getDefaultOUIAId(NavExpandable.displayName)\n    };\n\n    this.onExpand = (e, val) => {\n      if (this.props.onExpand) {\n        this.props.onExpand(e, val);\n      } else {\n        this.setState({\n          expandedState: val\n        });\n      }\n    };\n\n    this.handleToggle = (e, onToggle) => {\n      // Item events can bubble up, ignore those\n      if (!this.expandableRef.current || !this.expandableRef.current.contains(e.target)) {\n        return;\n      }\n\n      const {\n        groupId\n      } = this.props;\n      const {\n        expandedState\n      } = this.state;\n      onToggle(e, groupId, !expandedState);\n      this.onExpand(e, !expandedState);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      expandedState: this.props.isExpanded\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isExpanded !== prevProps.isExpanded) {\n      this.setState({\n        expandedState: this.props.isExpanded\n      });\n    }\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      title,\n      srText,\n      children,\n      className,\n      isActive,\n      ouiaId,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      groupId,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      id,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isExpanded\n    } = _a,\n          props = __rest(_a, [\"title\", \"srText\", \"children\", \"className\", \"isActive\", \"ouiaId\", \"groupId\", \"id\", \"isExpanded\"]);\n\n    const {\n      expandedState,\n      ouiaStateId\n    } = this.state;\n\n    const onClick = () => {\n      this.setState(prevState => ({\n        expandedState: !prevState.expandedState\n      }));\n    };\n\n    return React.createElement(NavContext.Consumer, null, context => React.createElement(\"li\", Object.assign({\n      className: css(styles.navItem, styles.modifiers.expandable, expandedState && styles.modifiers.expanded, isActive && styles.modifiers.current, className)\n    }, getOUIAProps(NavExpandable.displayName, ouiaId !== undefined ? ouiaId : ouiaStateId), {\n      onClick: e => this.handleToggle(e, context.onToggle)\n    }, props), React.createElement(\"button\", {\n      className: styles.navLink,\n      id: srText ? null : this.id,\n      onClick: onClick,\n      onMouseDown: e => e.preventDefault(),\n      \"aria-expanded\": expandedState\n    }, title, React.createElement(\"span\", {\n      className: css(styles.navToggle)\n    }, React.createElement(\"span\", {\n      className: css(styles.navToggleIcon)\n    }, React.createElement(AngleRightIcon, {\n      \"aria-hidden\": \"true\"\n    })))), React.createElement(\"section\", {\n      className: css(styles.navSubnav),\n      \"aria-labelledby\": this.id,\n      hidden: expandedState ? null : true\n    }, srText && React.createElement(\"h2\", {\n      className: css(a11yStyles.screenReader),\n      id: this.id\n    }, srText), React.createElement(\"ul\", {\n      className: css(styles.navList)\n    }, children))));\n  }\n\n}\nNavExpandable.displayName = 'NavExpandable';\nNavExpandable.defaultProps = {\n  srText: '',\n  isExpanded: false,\n  children: '',\n  className: '',\n  groupId: null,\n  isActive: false,\n  id: ''\n};","map":{"version":3,"sources":["../../../../src/components/Nav/NavExpandable.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport a11yStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nimport { getUniqueId } from '../../helpers/util';\nimport { NavContext } from './Nav';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class NavExpandable extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.expandableRef = React.createRef();\n        this.id = this.props.id || getUniqueId();\n        this.state = {\n            expandedState: this.props.isExpanded,\n            ouiaStateId: getDefaultOUIAId(NavExpandable.displayName)\n        };\n        this.onExpand = (e, val) => {\n            if (this.props.onExpand) {\n                this.props.onExpand(e, val);\n            }\n            else {\n                this.setState({ expandedState: val });\n            }\n        };\n        this.handleToggle = (e, onToggle) => {\n            // Item events can bubble up, ignore those\n            if (!this.expandableRef.current || !this.expandableRef.current.contains(e.target)) {\n                return;\n            }\n            const { groupId } = this.props;\n            const { expandedState } = this.state;\n            onToggle(e, groupId, !expandedState);\n            this.onExpand(e, !expandedState);\n        };\n    }\n    componentDidMount() {\n        this.setState({ expandedState: this.props.isExpanded });\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.isExpanded !== prevProps.isExpanded) {\n            this.setState({ expandedState: this.props.isExpanded });\n        }\n    }\n    render() {\n        const _a = this.props, { title, srText, children, className, isActive, ouiaId, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        groupId, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        id, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        isExpanded } = _a, props = __rest(_a, [\"title\", \"srText\", \"children\", \"className\", \"isActive\", \"ouiaId\", \"groupId\", \"id\", \"isExpanded\"]);\n        const { expandedState, ouiaStateId } = this.state;\n        const onClick = () => {\n            this.setState(prevState => ({ expandedState: !prevState.expandedState }));\n        };\n        return (React.createElement(NavContext.Consumer, null, (context) => (React.createElement(\"li\", Object.assign({ className: css(styles.navItem, styles.modifiers.expandable, expandedState && styles.modifiers.expanded, isActive && styles.modifiers.current, className) }, getOUIAProps(NavExpandable.displayName, ouiaId !== undefined ? ouiaId : ouiaStateId), { onClick: (e) => this.handleToggle(e, context.onToggle) }, props),\n            React.createElement(\"button\", { className: styles.navLink, id: srText ? null : this.id, onClick: onClick, onMouseDown: e => e.preventDefault(), \"aria-expanded\": expandedState },\n                title,\n                React.createElement(\"span\", { className: css(styles.navToggle) },\n                    React.createElement(\"span\", { className: css(styles.navToggleIcon) },\n                        React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" })))),\n            React.createElement(\"section\", { className: css(styles.navSubnav), \"aria-labelledby\": this.id, hidden: expandedState ? null : true },\n                srText && (React.createElement(\"h2\", { className: css(a11yStyles.screenReader), id: this.id }, srText)),\n                React.createElement(\"ul\", { className: css(styles.navList) }, children))))));\n    }\n}\nNavExpandable.displayName = 'NavExpandable';\nNavExpandable.defaultProps = {\n    srText: '',\n    isExpanded: false,\n    children: '',\n    className: '',\n    groupId: null,\n    isActive: false,\n    id: ''\n};\n//# sourceMappingURL=NavExpandable.js.map"]},"metadata":{},"sourceType":"module"}