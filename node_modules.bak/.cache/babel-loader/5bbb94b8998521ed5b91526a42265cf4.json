{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nimport { DrawerContext } from './Drawer';\nimport { formatBreakpointMods } from '../../helpers/util';\nexport const DrawerPanelContent = _a => {\n  var {\n    className = '',\n    children,\n    hasNoBorder = false,\n    widths\n  } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"hasNoBorder\", \"widths\"]);\n\n  return React.createElement(DrawerContext.Consumer, null, ({\n    isExpanded,\n    isStatic,\n    onExpand\n  }) => {\n    const hidden = isStatic ? false : !isExpanded;\n    return React.createElement(\"div\", Object.assign({\n      className: css(styles.drawerPanel, hasNoBorder && styles.modifiers.noBorder, formatBreakpointMods(widths, styles), className),\n      onTransitionEnd: ev => {\n        if (!hidden && ev.nativeEvent.propertyName === 'transform') {\n          onExpand();\n        }\n      },\n      hidden: hidden\n    }, props), !hidden && children);\n  });\n};\nDrawerPanelContent.displayName = 'DrawerPanelContent';","map":{"version":3,"sources":["../../../../src/components/Drawer/DrawerPanelContent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,uDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,SAAS,aAAT,QAA8B,UAA9B;AACA,SAAS,oBAAT,QAAqC,oBAArC;AAkBA,OAAO,MAAM,kBAAkB,GAAwC,EAAD,IAMxC;MANyC;AACrE,IAAA,SAAS,GAAG,EADyD;AAErE,IAAA,QAFqE;AAGrE,IAAA,WAAW,GAAG,KAHuD;AAIrE,IAAA;AAJqE,MAI/D,E;MACH,KAAK,GAAA,MAAA,CAAA,EAAA,EAL6D,CAAA,WAAA,EAAA,UAAA,EAAA,aAAA,EAAA,QAAA,CAK7D,C;;AACqB,SAC7B,KAAA,CAAA,aAAA,CAAC,aAAa,CAAC,QAAf,EAAuB,IAAvB,EACG,CAAC;AAAE,IAAA,UAAF;AAAc,IAAA,QAAd;AAAwB,IAAA;AAAxB,GAAD,KAAuC;AACtC,UAAM,MAAM,GAAG,QAAQ,GAAG,KAAH,GAAW,CAAC,UAAnC;AAEA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,MAAA,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,WADK,EAEZ,WAAW,IAAI,MAAM,CAAC,SAAP,CAAiB,QAFpB,EAGZ,oBAAoB,CAAC,MAAD,EAAS,MAAT,CAHR,EAIZ,SAJY,CADhB;AAOE,MAAA,eAAe,EAAE,EAAE,IAAG;AACpB,YAAI,CAAC,MAAD,IAAW,EAAE,CAAC,WAAH,CAAe,YAAf,KAAgC,WAA/C,EAA4D;AAC1D,UAAA,QAAQ;AACT;AACF,OAXH;AAYE,MAAA,MAAM,EAAE;AAZV,KAAA,EAaM,KAbN,CAAA,EAeG,CAAC,MAAD,IAAW,QAfd,CADF;AAmBD,GAvBH,CAD6B;AA0B9B,CAhCM;AAiCP,kBAAkB,CAAC,WAAnB,GAAiC,oBAAjC","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nimport { DrawerContext } from './Drawer';\nimport { formatBreakpointMods } from '../../helpers/util';\nexport const DrawerPanelContent = (_a) => {\n    var { className = '', children, hasNoBorder = false, widths } = _a, props = __rest(_a, [\"className\", \"children\", \"hasNoBorder\", \"widths\"]);\n    return (React.createElement(DrawerContext.Consumer, null, ({ isExpanded, isStatic, onExpand }) => {\n        const hidden = isStatic ? false : !isExpanded;\n        return (React.createElement(\"div\", Object.assign({ className: css(styles.drawerPanel, hasNoBorder && styles.modifiers.noBorder, formatBreakpointMods(widths, styles), className), onTransitionEnd: ev => {\n                if (!hidden && ev.nativeEvent.propertyName === 'transform') {\n                    onExpand();\n                }\n            }, hidden: hidden }, props), !hidden && children));\n    }));\n};\nDrawerPanelContent.displayName = 'DrawerPanelContent';\n//# sourceMappingURL=DrawerPanelContent.js.map"]},"metadata":{},"sourceType":"module"}