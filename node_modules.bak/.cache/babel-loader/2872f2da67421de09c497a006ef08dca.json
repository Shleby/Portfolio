{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Radio/radio';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class Radio extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.props.onChange(event.currentTarget.checked, event);\n    };\n\n    if (!props.label && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'Radio requires an aria-label to be specified');\n    }\n\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Radio.displayName)\n    };\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      'aria-label': ariaLabel,\n      checked,\n      className,\n      defaultChecked,\n      isLabelWrapped,\n      isLabelBeforeButton,\n      isChecked,\n      isDisabled,\n      isValid,\n      label,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onChange,\n      description,\n      ouiaId,\n      ouiaSafe = true\n    } = _a,\n          props = __rest(_a, ['aria-label', \"checked\", \"className\", \"defaultChecked\", \"isLabelWrapped\", \"isLabelBeforeButton\", \"isChecked\", \"isDisabled\", \"isValid\", \"label\", \"onChange\", \"description\", \"ouiaId\", \"ouiaSafe\"]);\n\n    const inputRendered = React.createElement(\"input\", Object.assign({}, props, {\n      className: css(styles.radioInput),\n      type: \"radio\",\n      onChange: this.handleChange,\n      \"aria-invalid\": !isValid,\n      disabled: isDisabled,\n      checked: checked || isChecked\n    }, checked === undefined && {\n      defaultChecked\n    }, !label && {\n      'aria-label': ariaLabel\n    }, getOUIAProps(Radio.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)));\n    const labelRendered = !label ? null : isLabelWrapped ? React.createElement(\"span\", {\n      className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled)\n    }, label) : React.createElement(\"label\", {\n      className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled),\n      htmlFor: props.id\n    }, label);\n    const descRender = description ? React.createElement(\"div\", {\n      className: css(styles.radioDescription)\n    }, description) : null;\n    const childrenRendered = isLabelBeforeButton ? React.createElement(React.Fragment, null, labelRendered, inputRendered, descRender) : React.createElement(React.Fragment, null, inputRendered, labelRendered, descRender);\n    return isLabelWrapped ? React.createElement(\"label\", {\n      className: css(styles.radio, className),\n      htmlFor: props.id\n    }, childrenRendered) : React.createElement(\"div\", {\n      className: css(styles.radio, className)\n    }, childrenRendered);\n  }\n\n}\nRadio.displayName = 'Radio';\nRadio.defaultProps = {\n  className: '',\n  isDisabled: false,\n  isValid: true,\n  onChange: () => {}\n};","map":{"version":3,"sources":["../../../../src/components/Radio/Radio.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Radio/radio';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class Radio extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.currentTarget.checked, event);\n        };\n        if (!props.label && !props['aria-label']) {\n            // eslint-disable-next-line no-console\n            console.error('Radio:', 'Radio requires an aria-label to be specified');\n        }\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(Radio.displayName)\n        };\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, checked, className, defaultChecked, isLabelWrapped, isLabelBeforeButton, isChecked, isDisabled, isValid, label, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onChange, description, ouiaId, ouiaSafe = true } = _a, props = __rest(_a, ['aria-label', \"checked\", \"className\", \"defaultChecked\", \"isLabelWrapped\", \"isLabelBeforeButton\", \"isChecked\", \"isDisabled\", \"isValid\", \"label\", \"onChange\", \"description\", \"ouiaId\", \"ouiaSafe\"]);\n        const inputRendered = (React.createElement(\"input\", Object.assign({}, props, { className: css(styles.radioInput), type: \"radio\", onChange: this.handleChange, \"aria-invalid\": !isValid, disabled: isDisabled, checked: checked || isChecked }, (checked === undefined && { defaultChecked }), (!label && { 'aria-label': ariaLabel }), getOUIAProps(Radio.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))));\n        const labelRendered = !label ? null : isLabelWrapped ? (React.createElement(\"span\", { className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled) }, label)) : (React.createElement(\"label\", { className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled), htmlFor: props.id }, label));\n        const descRender = description ? React.createElement(\"div\", { className: css(styles.radioDescription) }, description) : null;\n        const childrenRendered = isLabelBeforeButton ? (React.createElement(React.Fragment, null,\n            labelRendered,\n            inputRendered,\n            descRender)) : (React.createElement(React.Fragment, null,\n            inputRendered,\n            labelRendered,\n            descRender));\n        return isLabelWrapped ? (React.createElement(\"label\", { className: css(styles.radio, className), htmlFor: props.id }, childrenRendered)) : (React.createElement(\"div\", { className: css(styles.radio, className) }, childrenRendered));\n    }\n}\nRadio.displayName = 'Radio';\nRadio.defaultProps = {\n    className: '',\n    isDisabled: false,\n    isValid: true,\n    onChange: () => { }\n};\n//# sourceMappingURL=Radio.js.map"]},"metadata":{},"sourceType":"module"}