{"version":3,"sources":["assets/beardSkull.svg","pages/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","id","style","position","height","left","top","width","options","fpsLimit","particles","color","value","move","direction","enable","random","speed","straight","out_mode","number","density","value_area","opacity","anim","opacity_min","sync","shape","type","stroke","polygon","nb_sides","size","size_min","lineLinked","distance","detectRetina","src","logo","alt","margin","fontSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CreateRouting","WebFont","load","google","families","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2JAAe,G,YAAA,IAA0B,wC,iBCG1B,SAASA,IACtB,OACE,sBAAKC,UAAU,aAAf,UACE,cAAC,IAAD,CACEC,GAAG,cACHC,MAAO,CACLC,SAAU,WACVC,OAAQ,OACRC,KAAM,EACNC,IAAK,EACLC,MAAO,QAETC,QAAS,CACPC,SAAU,GACVC,UAAW,CACTC,MAAO,CACLC,MAAO,WAETC,KAAM,CACJC,UAAW,SACXC,QAAQ,EACRC,QAAQ,EACRC,MAAO,EACPC,UAAU,EACVC,SAAU,OAEZC,OAAQ,CACNC,QAAS,CACPN,QAAQ,EACRO,WAAY,KAEdV,MAAO,KAETW,QAAS,CACPX,MAAO,GACPI,QAAQ,EACRQ,KAAM,CACJT,QAAQ,EACRE,MAAO,EACPQ,YAAa,GACbC,MAAM,IAGVC,MAAO,CACLC,KAAM,SACNC,OAAQ,CACNtB,MAAO,EACPI,MAAO,WAETmB,QAAS,CACPC,SAAU,IAGdC,KAAM,CACJhB,QAAQ,EACRJ,MAAO,EACPY,KAAM,CACJT,QAAQ,EACRE,MAAO,GACPgB,SAAU,GACVP,MAAM,IAGVQ,WAAY,CACVnB,QAAQ,EACRoB,SAAU,IACVxB,MAAO,UACPY,QAAS,GACThB,MAAO,IAGX6B,cAAc,KAGlB,qBAAKC,IAAKC,EAAMtC,UAAU,WAAWuC,IAAI,SACzC,qBAAIrC,MAAO,CAAES,MAAO,SAApB,wBACa,wBAAQT,MAAO,CAAES,MAAO,WAAxB,4BACX,uBAFF,oCAKA,sBAAKX,UAAU,UAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,gDAEE,uBAFF,mBAMF,yBAAQA,UAAU,kBAAlB,UACE,8BACE,oDACA,0BAEF,mBAAGE,MAAO,CAAEsC,QAAS,GAArB,SACE,sBAAMtC,MAAO,CAAEuC,SAAU,UAAzB,yBAGJ,wBAAQzC,UAAU,aAAlB,SACE,yDC1FK0C,MARf,WACE,OACE,qBAAK1C,UAAU,MAAf,SACE,cAACD,EAAD,OCQS4C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gCCMd,SAASQ,IAOP,OANAC,IAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,YAAa,iBAK1B,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,0CApBRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACT,EAAD,MAEFU,SAASC,eAAe,SAwB1BpB,K","file":"static/js/main.d47f605a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/beardSkull.91647123.svg\";","import logo from \"../assets/beardSkull.svg\";\r\nimport Particles from \"react-tsparticles\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"App-header\">\r\n      <Particles\r\n        id=\"tsparticles\"\r\n        style={{\r\n          position: \"absolute\",\r\n          height: \"100%\",\r\n          left: 0,\r\n          top: 0,\r\n          width: \"100%\",\r\n        }}\r\n        options={{\r\n          fpsLimit: 60,\r\n          particles: {\r\n            color: {\r\n              value: \"#ffffff\",\r\n            },\r\n            move: {\r\n              direction: \"bottom\",\r\n              enable: true,\r\n              random: false,\r\n              speed: 4,\r\n              straight: false,\r\n              out_mode: \"out\",\r\n            },\r\n            number: {\r\n              density: {\r\n                enable: true,\r\n                value_area: 800,\r\n              },\r\n              value: 123,\r\n            },\r\n            opacity: {\r\n              value: 0.5,\r\n              random: true,\r\n              anim: {\r\n                enable: false,\r\n                speed: 1,\r\n                opacity_min: 0.1,\r\n                sync: false,\r\n              },\r\n            },\r\n            shape: {\r\n              type: \"circle\",\r\n              stroke: {\r\n                width: 0,\r\n                color: \"#ffffff\",\r\n              },\r\n              polygon: {\r\n                nb_sides: 5,\r\n              },\r\n            },\r\n            size: {\r\n              random: true,\r\n              value: 3,\r\n              anim: {\r\n                enable: false,\r\n                speed: 40,\r\n                size_min: 0.1,\r\n                sync: false,\r\n              },\r\n            },\r\n            lineLinked: {\r\n              enable: false,\r\n              distance: 500,\r\n              color: \"#ffffff\",\r\n              opacity: 0.4,\r\n              width: 2,\r\n            },\r\n          },\r\n          detectRetina: true,\r\n        }}\r\n      />\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <h1 style={{ color: \"white\" }}>\r\n        Hello, I'm <strong style={{ color: \"#c4c25f\" }}>Shelby Huffman</strong>\r\n        <br />\r\n        I'm a Full Stack Web Developer\r\n      </h1>\r\n      <div className=\"App-nav\">\r\n        <button className=\"App-button\">\r\n          <p>\r\n            Watch Cavaliers\r\n            <br />\r\n            Performance\r\n          </p>\r\n        </button>\r\n        <button className=\"App-button even\">\r\n          <p>\r\n            <text>Explore my work </text>\r\n            <br />\r\n          </p>\r\n          <p style={{ margin: -5 }}>\r\n            <text style={{ fontSize: \"larger\" }}>ï¹€</text>\r\n          </p>\r\n        </button>\r\n        <button className=\"App-button\">\r\n          <p>Schedule Lessons</p>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Header from \"./pages/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport WebFont from \"webfontloader\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CreateRouting />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nfunction CreateRouting() {\n  WebFont.load({\n    google: {\n      families: [\"Quicksand\", \"sans-serif\"],\n    },\n  });\n\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <App />\n      </Route>\n      <Route path=\"/test\">\n        <h1>hey</h1>\n      </Route>\n    </Router>\n  );\n}\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}